html {
  width: 100%;
  height: 100%;
  overflow: hidden;
}
* {
  font-family: sans-serif;
}

.layout {
  display: flex;
  width: 100%;
  height: 100%;
  padding: 0;
  margin: 0;
}
.bg {
  position: absolute;
  top: 0;
  left: 0;
  width: 100%;
  height: 100%;
  background-image: url("../images/background.avif");
  background-size: cover;
  background-repeat: no-repeat;
  opacity: 0.1;
}

/*SVG STYLES*/
#container {
  display: flex;
  width: 100%;
  height: 100%;
  overflow: hidden;
}
#container > .drag-state {
  width: fit-content;
  height: fit-content;
  position: absolute;
  cursor: pointer;
}
#container > .drag-state > img {
  position: relative;
  aspect-ratio: auto;
  object-fit: contain;
  will-change: transform;
}
#container > .drag-state > p {
  position: absolute;
  z-index: 10000;
  text-transform: capitalize;
}
#container > .drag-state:hover {
  opacity: 0.6;
}
.svg-container {
  margin: auto;
}
.svg { 
  margin: auto;
  transform-origin: top left;
  flex-shrink: 0;
  will-change: transform;
}

.checked {
  opacity: 0.5;
  cursor: not-allowed;
}

.status-icon {
  position: absolute;
  width: 20px;
  max-height: fit-content;
  flex-shrink: 0;
  aspect-ratio: auto;
  border: 2px solid;
  border-radius: 100%;
}
.cross {
  border-color: red;
}
.tick {
  border-color: green;
}

/*SVG STYLES*/

/*TOOLBAR STYLES*/
.toolbar {
  position: relative;
  display: flex;
  flex-direction: column;
  padding: 20px;
  height: calc(100% - 40px);
  position: relative;
  z-index: 10;
}
.toolbar > .logo {
  height: fit-content;
  margin: auto;
  cursor: pointer;
}
.choose-states {
  width: 160px;
  display: flex;
  flex-direction: column;
  flex: 1;
  width: 100%;
  overflow: hidden;
}
.choose-states > h2 {
  margin: 5px 0;
  text-align: center;
  background-color: white;
}
.choose-states > input {
  padding: 5px;
  border: 1px solid white;
  outline-style: none;
}
.states {
  flex: 1;
  width: 160px;
  margin-bottom: 20px;
  overflow: auto;
}
.states::-webkit-scrollbar {
  display: none;
}
.states > .state {
  width: calc(100% - 20px);
  padding: 5px;
  margin: 10px auto;
  border-radius: 10px;
  box-shadow: 1px 1px 5px 0px rgba(0, 0, 0, 0.2);
  background-color: white;
  transition: all 0.3s;
  cursor: pointer;
  border-left: none;
  border-right: none;
  text-align: center;
}

.states > .state > img {
  width: 100%;
  max-height: 50%;
  aspect-ratio: 2/2;
  object-fit: contain;
  margin: auto;
}
.states > .state > span {
  display: block;
  font-size: 0.9rem;
  color: black;
  text-transform: capitalize;
}

.buttons {
  display: flex;
  flex-direction: column;
  gap: 20px;
  width: 100%;
  height: fit-content;
}

.buttons > button {
  width: 100%;
  height: fit-content;
  padding: 8px 10px;
  font-size: 1rem;
  border-radius: 5px;
  font-weight: bold;
  font-family: sans-serif;
  border: none;
  color: white;
  cursor: pointer;
  transition: all 0.2s;
  text-transform: uppercase;
  box-shadow: 0 5px 0 rgba(0, 0, 0, 0.2), 0 8px 10px rgba(0, 0, 0, 0.15);
  position: relative;
}

.buttons > button:hover {
  transform: translateY(-2px);
  box-shadow: 0 7px 0 rgba(0, 0, 0, 0.2), 0 10px 14px rgba(0, 0, 0, 0.15);
}

.buttons > button:active {
  transform: translateY(2px);
  box-shadow: 0 2px 0 rgba(0, 0, 0, 0.2), 0 4px 6px rgba(0, 0, 0, 0.15);
}

.buttons > button:nth-child(1) {
  background-color: #4caf50;
}

.buttons > button:nth-child(2) {
  background-color: royalblue;
}

.buttons > button:nth-child(3) {
  background-color: #f44336;
}

.buttons > button:nth-child(4) {
  background-color: goldenrod;
}

.instruction {
  position: absolute;
  top: 20px;
  left: -340px;
  width: 300px;
  box-shadow: 1px 1px 8px 2px rgba(0, 0, 0, 0.05);
  padding: 20px;
  background-color: #ffffff;
  border: 1px solid wheat;
  transform: translateX(100%);
  opacity: 0;
  z-index: -1;
  font-family: sans-serif;
}
.instruction > .content {
  position: relative;
}
.instruction > .content > div {
  display: flex;
  justify-content: space-between;
  align-items: center;
}
.instruction > .content h2 {
  margin: 0;
}
.instruction > .content span {
  margin: 0;
  font-size: 1rem;
  margin: auto 0;
  cursor: pointer;
}
.instruction > .content .description {
  margin-top: 20px;
}
.instruction > .content .arrow {
  top: 5px;
  right: -28.5px;
  position: absolute;
  width: 15px;
  height: 15px;
  transform: rotate(45deg);
  background-color: #ffffff;
  border-right: 1px solid wheat;
  border-top: 1px solid wheat;
}

/*TOOLBAR STYLES*/

/*Alert box*/
.alert-box {
  display: none;
  position: fixed;
  top: 0;
  left: 0;
  width: 100vw;
  height: 100vh;
  background-color: rgba(0, 0, 0, 0.207);
  justify-content: center;
  align-items: center;
  z-index: 1000;
}

.alert-content {
  display: flex;
  flex-direction: column;
  gap: 10px;
  margin: auto;
  padding: 40px 100px;
  border-radius: 10px;
  background-color: rgba(255, 255, 255, 0);
  box-shadow: 1px 1px 10px 8px rgba(0, 0, 0, 0.05);
  backdrop-filter: blur(1px);
}

.alert-message {
  font-size: 2rem;
  text-align: center;
  margin-bottom: 20px;
  color: #4caf50;
}

.alert-button {
  display: block;
  padding: 10px 20px;
  font-size: 1rem;
  color: #fff;
  background-color: #007bff;
  border: none;
  border-radius: 5px;
  cursor: pointer;
  transition: background-color 0.3s ease;
}

.alert-button:hover {
  background-color: #0056b3;
}

@media only screen and (max-width: 800px) {
  .layout {
    flex-direction: column;
    height: 100%;
  }
  .layout > #container {
    flex: 1;
  }
  .layout > #container > img {
    /*scale: 0.68;*/
    transform-origin:top left;
  }
  /*svg {
    transform: translate(0) scale(0.09);
  }*/
  .toolbar {
    width: 100%;
    height: fit-content;
    padding: 0;
  }
  .buttons {
    width: 100%;
    display: grid;
    grid-template-columns: 1fr 1fr 1fr 1fr;
    gap: 0;
    padding: 0;
  }
  .buttons > button {
    box-shadow: none;
    border-radius: 0;
  }
  .choose-states {
    flex: 1;
  }
  .states {
    width: 100%;
    display: flex;
    gap: 10px;
    padding: 0 10px;
    margin-bottom: 5px;
    flex-direction: row;
  }
  .states > .state {
    display: flex;
    flex-direction: column;
    align-items: center;
    width: 100px;
    flex-shrink: 0;
    aspect-ratio: 1/1;
    height: fit-content;
  }
  .states > .state > span {
    font-size: 0.8rem;
  }
}

.states > .selected {
  display: none;
}

@keyframes slideLeft {
  from {
    transform: translateX(100%);
    opacity: 0;
  }
  to {
    transform: translateX(0);
    opacity: 1;
  }
}

@keyframes slideRight {
  from {
    transform: translateX(0);
    opacity: 1;
  }
  to {
    transform: translateX(100%);
    opacity: 0;
  }
}

.slide-left {
  animation: slideLeft 0.5s ease-out 0.2s forwards;
}

.slide-right {
  animation: slideRight 0.5s ease-in forwards;
}